#Dockerised IPSC <--> HomeBrew Protocol stack. 
#
#For connecting Motorola repeaters to FreeDMR
#NB: If you get strange audio problems, try only 
#enabling one timelot. This is a known issue 
#with the current tools. 

version: '3.3'
services:
    #Duplicate this section for each repeater
    #do docker-compose down and then docker-compose up -d in this 
    #directory afterwards to stop and start the containers 
    #you may need to do conntrack -F after the restart
    FreeDMR-HYTERA:
        container_name: FreeDMR-HYTERA
        ports:
          #HYTERA ports - right side always stays the same (inside container), left side is 
          #the port you want to present on the outside.
          #This is automatically mapped - docker uses iptables to do this
          - '50000:50000/udp'
          - '50001:50001/udp'
          - '50002:50002/udp'
        environment:
          #hytera connection 
          #ip is the public ip the hytera repeater will connect too
          - ip =
          - p2p_port =
          - dmr_port =
          - rdac_port =
          # homebrew  
          -protocol = dmrgateway
          -local_ip = 0.0.0.0
          -local_port = 
          -master_ip =
          -master_port = 62041
          #Configure Repeater server side (DMRGateway)
          #Put an Options line here to configure static TGs etc
          - 'DMRG_OPTIONS='
          #Target server
          - DMRG_TARGET=
          #Disable dial-a-tg on slot 2
          - DMRG_DISABLEDIAL=0
          #Add a rewrite to TS1TG9.
          #Leave emtpy to disable
          - DMRG_REWRITETS1TG9=
        image: 'hacknix/freedmr-ipsc:latest'
        #Container will persist over reboots
        restart: "unless-stopped"
